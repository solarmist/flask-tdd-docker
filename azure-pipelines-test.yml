 jobs:
  - ${{ each image in parameters.images }}:
    - ${{ each pythonVersion in parameters.pythonVersions }}:
      - job:
        displayName: ${{ format('OS:{0} Python:{1}', image, pythonVersion) }}
        pool:
          vmImage: ${{ image }}
        variables:
          - group: flask-tdd-docker-testing

        steps:
          - task: UsePythonVersion@0
            displayName: 'Use Python ${{ pythonVersion }}'
            inputs:
              versionSpec: ${{ pythonVersion }}

          - script: |
              pip install -r requirements.txt
              pip install pytest pytest-cov flake8
              python ./setup.py develop

            displayName: 'Install requirements'

          - script: |
              flake8 .
            displayName: 'Lint code'

          - script: |
              pytest tests --verbose --junitxml=junit/test-results.xml --cov=project --cov-branch --cov-report=xml
            displayName: 'Test with pytest'
            env:
              POSTGRES_USER: $(POSTGRES_USER)
              POSTGRES_PASSWORD: $(POSTGRES_PASSWORD)
              DB_HOST: $(DB_HOST)
              DB_MODE: $(DB_MODE)
              DB_NAME: $(DB_NAME)
              DB_PORT: $(DB_PORT)
              SSL_MODE: $(SSL_MODE)
              APP_SETTINGS: $(APP_SETTINGS)
              FLASK_ENV: $(FLASK_ENV)

          - task: PublishTestResults@2
            displayName: 'Publish test results'
            condition: succeededOrFailed()
            inputs:
              testResultsFiles: '**/test-*.xml'
              testRunTitle: 'Publish test results for Python ${{ pythonVersion }}'

          - task: PublishCodeCoverageResults@1
            displayName: 'Publish Code Coverage Results'
            inputs:
              codeCoverageTool: cobertura
              failIfCoverageEmpty: true
              summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
              reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
